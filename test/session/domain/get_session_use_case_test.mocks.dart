// Mocks generated by Mockito 5.0.14 from annotations
// in estiminator/test/session/domain/get_session_use_case_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:estiminator/session/domain/model/estimation_scale_domain_model.dart'
    as _i2;
import 'package:estiminator/session/domain/model/session_domain_model.dart'
    as _i5;
import 'package:estiminator/session/domain/session_repo.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEstimationScaleDomainModel_0 extends _i1.Fake
    implements _i2.EstimationScaleDomainModel {}

/// A class which mocks [ISessionRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockISessionRepo extends _i1.Mock implements _i3.ISessionRepo {
  MockISessionRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i5.SessionDomainModel> getSessionStream(String? sessionId) =>
      (super.noSuchMethod(Invocation.method(#getSessionStream, [sessionId]),
              returnValue: Stream<_i5.SessionDomainModel>.empty())
          as _i4.Stream<_i5.SessionDomainModel>);
  @override
  _i4.Future<_i2.EstimationScaleDomainModel> getScale({String? sessionId}) =>
      (super.noSuchMethod(
              Invocation.method(#getScale, [], {#sessionId: sessionId}),
              returnValue: Future<_i2.EstimationScaleDomainModel>.value(
                  _FakeEstimationScaleDomainModel_0()))
          as _i4.Future<_i2.EstimationScaleDomainModel>);
  @override
  String toString() => super.toString();
}
